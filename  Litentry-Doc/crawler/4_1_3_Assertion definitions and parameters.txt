Assertion definitions and parametersAn Assertion is a DSL(Domain Specific Language) that contains a set of steps to describe how to fetch and calculate the final data. The DSL itself is code and can be auto-generated to Parachain runtime codes or TypeScript SDK codes.prosenabling flexibility, isolation, and abstract module of assertions;standardizes the data fetch and assertion calculate/validate logic;it can cover most use cases for the issuer;improve the verifiability of assertions with trustless auto-generated codes.conshas a higher barrier for issuers to organize or write assertions;has a larger Json file size.The supported src, opand dst in each Rule are described as follows:Data type of src and dstNULLBooleanNumber: int / long / float / double/decimalStringObjectArray[Boolean/Number/String/Object]Operator op+(add), -(subtract), *(multiply), /(divide)%, round(), >= , <, <= , ==, !=in, not incontains, not containsincludes onesize, sum, averageownsData type and Operator BindingBoolean: >, >= , <, <= , ==, !=, in, not inNumber: >, >= , <, <= , ==, !=, in, not inString: >, >= , <, <= , ==, !=, in, not inObject: (if comparable) >, >= , <, <= , ==, !=,Array: ==, !=, in, not in, contains, not contains, includes one, size, sum, averageâ€‹PreviousVCMP Extrinsic, Events, and Error EventsNextIdentity Management Pallet (IMP)Last modified 1mo agoCopy link